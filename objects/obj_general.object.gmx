<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time_data_update = 30;
alarm[0] = time_data_update;

Server = network_create_server( network_socket_tcp , 63258 , 32 );
Buffer = buffer_create( 1024 , buffer_fixed , 1 );
SocketList = ds_list_create();
global.max_players=0;

num_players = 0;
var player_name, a;
ini_open("data.ini");
a = ini_read_real("Gamers", "Num", 0);    
ini_close();
if (a == 0)
{
    ini_open("data.ini");
    ini_write_real("Gamers", "Num", 0);    
    ini_close();
    player_add("Nemor");
    player_add("Moxx");
    player_add("Void");
}
ini_open("data.ini");
num_players = ini_read_real("Gamers", "Num", 0);
for (i = 0; i &lt; num_players; i++)
{
    player_name = ini_read_string("Gamers", "Gamer" + string(i), "");
    a = instance_create(ini_read_real(player_name, "x", 0), 
    ini_read_real(player_name, "y", 0), obj_player_ship);
    a.name = player_name;
    a.password = ini_read_string(player_name, "Password", 0);
    a.image_angle = ini_read_real(player_name, "image_angle", 0);
    a.shell_type = ini_read_real(player_name, "shell_type", SMALL);
    a.shell_mass = ini_read_real(player_name, "shell_mass", 100);
    a.shell_hp = ini_read_real(player_name, "shell_hp", 30);
    a.shell_signature = ini_read_real(player_name, "shell_signature", 20);
    a.shell_hold = ini_read_real(player_name, "shell_hold", 40);
    a.shell_lifesupporting = ini_read_real(player_name, "shell_lifesupporting", 20);
    a.engine_type = ini_read_real(player_name, "engine_type", SMALL);
    a.engine_fuel = ini_read_real(player_name, "engine_fuel", TYPE_FUEL_1);
    a.engine_trace = ini_read_real(player_name, "engine_trace", 20);
    a.engine_thrust = ini_read_real(player_name, "engine_thrust", 0.5);
    a.engine_fuelconsumpton = ini_read_real(player_name, "engine_fuelconsumpton", 1);
    a.engine_speedparticles = ini_read_real(player_name, "engine_speedparticles", 5);
    a.engine_maneuverability = ini_read_real(player_name, "engine_maneuverability", 3);
    a.engine_reliability = ini_read_real(player_name, "engine_reliability", 100);
    a.passivearmor_hp = ini_read_real(player_name, "passivearmor_hp", 10);
    a.passivearmor_mass = ini_read_real(player_name, "passivearmor_mass", 10);
    a.activearmor = ini_read_real(player_name, "activearmor", 0);
    a.weapon_range = ini_read_real(player_name, "weapon_range", 30);
    a.weapon_damage = ini_read_real(player_name, "weapon_damage", 5);
    a.weapon_rate = ini_read_real(player_name, "weapon_rate", 1);
    a.weapon_accuracy = ini_read_real(player_name, "weapon_accuracy", 20);
    a.power_capacity = ini_read_real(player_name, "power_capacity", 100);
    a.radar_distance = ini_read_real(player_name, "radar_distance", 300);
    a.radar_closedistance = ini_read_real(player_name, "radar_closedistance", 100);
    a.optics_distance = ini_read_real(player_name, "optics_distance", 100);
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>data_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var type_event = ds_map_find_value( async_load , "type" );
   switch( type_event ) {
      case network_type_connect:
         var socket = ds_map_find_value( async_load , "socket" );
         ds_list_add( SocketList , socket );
      break;
      case network_type_disconnect:
         var socket = ds_map_find_value( async_load , "socket" );
         var findsocket = ds_list_find_index( SocketList , socket );
         if ( findsocket &gt;= 0 ) {
            ds_list_delete( SocketList , findsocket );
         }
      break;
      case network_type_data:
         var buffer = ds_map_find_value( async_load , "buffer" );
         var socket = ds_map_find_value( async_load , "id" );
         buffer_seek( buffer , buffer_seek_start , 0 );
         ReceivedPacket( buffer , socket );
      break;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>network_destroy( Server );
buffer_delete( Buffer );
ds_list_destroy( SocketList );
data_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_font(font_text);
draw_set_color( c_white );
draw_text( 16, 16, "Сервер создан: " + string( Server &gt;= 0 ) );
draw_text( 16, 120, "Сейчас на сервере игроков: " + string( ds_list_size( SocketList ) ) );
draw_text( 16, 240, "Всего было игроков на сервере: " + string( global.max_players) );*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_delete("data.ini");
game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
